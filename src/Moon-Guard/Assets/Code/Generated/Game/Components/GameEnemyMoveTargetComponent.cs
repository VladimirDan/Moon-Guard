//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEnemyMoveTarget;

    public static Entitas.IMatcher<GameEntity> EnemyMoveTarget {
        get {
            if (_matcherEnemyMoveTarget == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.EnemyMoveTarget);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEnemyMoveTarget = matcher;
            }

            return _matcherEnemyMoveTarget;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Enemies.EnemyMoveTargetComponent enemyMoveTarget { get { return (Code.Gameplay.Features.Enemies.EnemyMoveTargetComponent)GetComponent(GameComponentsLookup.EnemyMoveTarget); } }
    public UnityEngine.Vector2 EnemyMoveTarget { get { return enemyMoveTarget.Value; } }
    public bool hasEnemyMoveTarget { get { return HasComponent(GameComponentsLookup.EnemyMoveTarget); } }

    public GameEntity AddEnemyMoveTarget(UnityEngine.Vector2 newValue) {
        var index = GameComponentsLookup.EnemyMoveTarget;
        var component = (Code.Gameplay.Features.Enemies.EnemyMoveTargetComponent)CreateComponent(index, typeof(Code.Gameplay.Features.Enemies.EnemyMoveTargetComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceEnemyMoveTarget(UnityEngine.Vector2 newValue) {
        var index = GameComponentsLookup.EnemyMoveTarget;
        var component = (Code.Gameplay.Features.Enemies.EnemyMoveTargetComponent)CreateComponent(index, typeof(Code.Gameplay.Features.Enemies.EnemyMoveTargetComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveEnemyMoveTarget() {
        RemoveComponent(GameComponentsLookup.EnemyMoveTarget);
        return this;
    }
}
